#. Dynamic Programming is the proccess of computing a problem at different states and
 storing the states somewhere so that it can be used later without the need the calculating all its sub states.

*. Choice diagram and overlapping subproblems gives birth to Dynamic Programming.

##### PARENT QUESTIONS ######

0. Fibonacci

1. 0|1 Knapsack
    - Subset sum
    - Count of Subset sum
    - Equal sum partition
    - Minimum subset sum
    - Target sum
    - no of subset with given difference

2. Unbounded Knapsack

3. LCS(Longest Common Subsequence)
    - Longest common substring
    - print LCS
    - Shortest Common Supersequence
    - Minimum no of insertion and deletion A -> B
    - Longest Palindromic Subsequence
    - Longest Palindromic substring
    - Count of the Palindromic substring
    - Longest Repeating Subsequence
    - Length of largest Subsequence of a which is substring in B
    - Subsequence pattern matching
    - Count of A's appearance in B 
    - Minimum no of deletion in a string to make it a palindrome
    - Minimum no of insertion in a string to make it a palindrome

4. LIS(Longest Increasing Subsequence)

6. Kadane's Algorithm

7. Matrix chain multiplications
    - Printing MCM
    - Evaluate expression to true/ Boolean paranthesization
    - Min/Max value
    - Palindrome partitioning
    - Scrambled String 
    - Egg dropping problem

8. DP on Trees

9. DP on Grid

10. Other questions
